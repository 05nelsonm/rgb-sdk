#ifndef librgb_h
#define librgb_h

/* Generated with cbindgen:0.14.3 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

typedef enum CResultValue {
  Ok,
  Err,
} CResultValue;

typedef struct CResultString {
  CResultValue result;
  const char *inner;
} CResultString;

typedef struct COpaqueStruct {
  const void *ptr;
  uint64_t ty;
} COpaqueStruct;

typedef struct CResult {
  CResultValue result;
  COpaqueStruct inner;
} CResult;

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

CResultString rgb20_invoice(const char *asset_id, double amount, const char *outpoint);

CResult rgb_node_connect(const char *datadir,
                         const char *network,
                         const char *stash_rpc_endpoint,
                         const char *contract_endpoints,
                         const char *electrum,
                         unsigned char verbosity);

CResult rgb_node_fungible_accept(const COpaqueStruct *runtime,
                                 const char *consignment_file,
                                 const char *reveal_outpoints);

CResultString rgb_node_fungible_asset_allocations(const COpaqueStruct *runtime,
                                                  const char *contract_id);

CResultString rgb_node_fungible_export_asset(const COpaqueStruct *runtime, const char *asset_id);

CResult rgb_node_fungible_import_asset(const COpaqueStruct *runtime, const char *asset_genesis);

CResult rgb_node_fungible_issue(const COpaqueStruct *runtime,
                                const char *network,
                                const char *ticker,
                                const char *name,
                                const char *description,
                                unsigned char precision,
                                const char *allocations,
                                const char *inflation,
                                const char *renomination,
                                const char *epoch);

CResultString rgb_node_fungible_list_assets(const COpaqueStruct *runtime);

CResultString rgb_node_fungible_outpoint_assets(const COpaqueStruct *runtime, const char *outpoint);

CResult rgb_node_fungible_transfer(const COpaqueStruct *runtime,
                                   const char *inputs,
                                   const char *allocate,
                                   const char *invoice,
                                   const char *prototype_psbt,
                                   const char *consignment_file,
                                   const char *transaction_file);

CResult rgb_node_fungible_validate(const COpaqueStruct *runtime, const char *consignment_file);

CResult rgb_node_run(const char *datadir,
                     const char *network,
                     const char *electrum,
                     unsigned char verbosity);

#ifdef __cplusplus
} // extern "C"
#endif // __cplusplus

#endif /* librgb_h */
